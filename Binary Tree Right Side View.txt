/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 import java.util.*;
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer>ans = new ArrayList<>();
        ArrayDeque<TreeNode>q = new ArrayDeque<>();
        if(root == null)return ans;
        q.add(root);
        while(q.size()>0){
            TreeNode last = null;
            int s = q.size();
            while(s-- > 0){
                last = q.remove();
                if(last.left != null){
                    q.add(last.left);
                }
                if(last.right != null){
                    q.add(last.right);
                }
            }
            ans.add(last.val);
        }
        return ans;
    }
}













