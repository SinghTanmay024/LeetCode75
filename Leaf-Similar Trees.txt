/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {

        ArrayList<Integer>arr1 = new ArrayList<>();
        ArrayList<Integer>arr2 = new ArrayList<>();

        getleaf(root1,arr1);
        getleaf(root2,arr2);
        int n = arr1.size();
        int m = arr2.size();

        if(n != m)return false;
        
        for(int i = 0;i<n;i++){
            if(arr1.get(i) != arr2.get(i)){
                return false;
            }
        }
        return true;
    }
    public void getleaf(TreeNode root,ArrayList<Integer>arr1) {

        if(root == null){
            return;
        }
        if(root.left == null && root.right == null){
            arr1.add(root.val);
        }
        getleaf(root.left,arr1);
        getleaf(root.right,arr1);
    }
}