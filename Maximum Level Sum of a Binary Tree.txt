/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        int sum = 0;
        int ms = Integer.MIN_VALUE;
        int ans = 0;
        ArrayDeque<TreeNode> q = new ArrayDeque<>();
        q.add(root);
        int l = 1;
        while(q.size() > 0){
            int s = q.size();
            sum = 0;
            while(s-- > 0){
                TreeNode rem = q.remove();
                sum +=rem.val;
                if(rem.left != null) q.add(rem.left);
                if(rem.right != null) q.add(rem.right);
            }
            if(sum > ms){
                ms = sum;
                ans = l;
            }
            l++;
        }
        return ans;
    }
}